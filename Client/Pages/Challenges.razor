@page "/challenges"


<div>
    <RadzenDialog />
</div>



<div class="challenges-container">
    @foreach (var item in challenges)
    {
        <div class="d-flex m-3 flex-column challenge-card">
            <div class="mx-3 my-1 d-flex justify-content-between">
                <b>@item.Title</b>
                <div>
                    <b>Nagroda: @item.Reward</b>
                </div>
            </div>
            <div class="m-3"> @item.Content </div>
            <div class="m-3 d-flex flex-row justify-content-between">
                <RadzenProgressBar Style="width: 65%;" Value="@item.Percentage"></RadzenProgressBar>
                @if (item.Status == 2)
                {
                    <b>Zakończone</b>
                }
                else
                {
                    <RadzenButton Style="width: 28%;" Text="Zakończ wyzwanie" Disabled="@(item.WonMatches<item.Count)" Click="async() => await EndChallenge(item.ChallengeId)" />
                }

            </div>
        </div>
    }


</div>

@code{


    async Task ShowInlineDialog(string money) => await DialogService.OpenAsync("Informacja", ds =>
    @<div>
        <p Style="margin-bottom: 1rem">Gratulacje! Otrzymałeś: <b> @money </b></p>
        <div class="d-flex justify-content-center">
            <RadzenButton Text="Zamknij" Click="(() => { ds.Close(true); Close(); })" ButtonStyle="ButtonStyle.Secondary" Style="margin: 0 10px 10px 10px; " />
        </div>
    </div>, new DialogOptions() { Left = "20vw", Top = "30%" });


async Task ShowInlineDialogFail() => await DialogService.OpenAsync("Informacja", ds =>
@<div>
    <p Style="margin-bottom: 1rem">Coś posżło nie tak</p>
    <div class="d-flex justify-content-center">
        <RadzenButton Text="Zamknij" Click="(() => { ds.Close(false); Close(); })" ButtonStyle="ButtonStyle.Secondary" Style="margin: 0 10px 10px 10px; " />
    </div>
</div>, new DialogOptions() { Left = "20vw", Top = "30%" });

    async Task Close()
    {
        await InvokeAsync(StateHasChanged);
    }

}