@page "/administration/users"


<div>
    <RadzenTooltip />
</div>

<div>
    <RadzenDialog />
</div>


<div class="users-container">
    <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Dodaj" Click="@Add" />

    <RadzenGrid @ref="usersGrid" Count="@count" Data="@users" LoadData="@LoadData" AllowSorting="true" AllowFiltering="true" AllowPaging="true" TItem="Quiz.Shared.ViewModels.UserVM" PageSize="50" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="Id" Title="UserId" Visible="false" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="Username" Title="Użytkownik" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="FirstName" Title="Imię" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="LastName" Title="Nazwisko" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="Money" Title="Pieniądze" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Property="Email" Title="Email" />
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Context="user" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                <Template Context="user">
                    <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args => Edit(user))"
                                  MouseEnter="@(args => ShowTooltip(args,new TooltipOptions(){ Position = TooltipPosition.Bottom , Style="background-color: #052867"},"Edytuj"))">
                    </RadzenButton>
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="Quiz.Shared.ViewModels.UserVM" Context="user" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="50px">
                <Template Context="user">
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small"
                                  Click=@(args => ShowInlineDialog(user.Id,user.Username))
                                  MouseEnter="@(args => ShowTooltip(args,new TooltipOptions(){ Position = TooltipPosition.Bottom , Style="background-color: #052867"},"Usuń"))">
                    </RadzenButton>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>

</div>


@code {
    void ShowTooltip(ElementReference elementReference, TooltipOptions options = null, string message = "") => tooltipService.Open(elementReference, message, options);

    async Task ShowInlineDialog(string userId, string name) => await DialogService.OpenAsync("Usuwanie", ds =>
    @<div>
        <p Style="margin-bottom: 1rem"> Czy na pewno chcesz usunąć tego użytkownika? <b> @name </b></p>
        <div class="d-flex justify-content-center">
            <RadzenButton Text="Tak" Click="(async() => { ds.Close(true); await Close(true, userId); })" Style=" margin: 0 10px 10px 10px" />
            <RadzenButton Text="Anuluj" Click="(() => { ds.Close(false); })" ButtonStyle="ButtonStyle.Secondary" Style="margin: 0 10px 10px 10px; " />
        </div>
    </div>, new DialogOptions() { Left = "20vw", Top = "30%" });



    async Task Close(bool result, string categoryId)
    {
        if (result)
        {
            var response = await UserService.Delete(categoryId);
            if (response.IsSuccessful)
            {
                await usersGrid.Reload();
            }

        }

    }





}